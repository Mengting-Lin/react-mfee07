redux開發所需套件安裝
https://github.com/eyesofkids/201/issues/37

redux
https://github.com/eyesofkids/201/blob/master/data/0615/redux_ch1_zhTW.key.pdf
https://noootown.gitbooks.io/deeperience-react-native-boilerplate/content/Redux/MapStateToProps%20&%20MapDispatchToProps%20&%20Connect.html

【index.js】

import {Provider} from 'react-redux'
import store from './redux/store'

ReactDOM.render((
    <Provider store={store}>
        <App/>
    </Provider>
), document.getElementById('root'))

//引入react-redux即不須以下(含subscribe)
function render(){
    ReactDOM.render(<App store={store}/>, document.getElementById('root'))
}
render()                       // 初始化渲染
store.subscribe(render)        // 調閱監聽(store中的狀態變了，就會自動調用進行重繪)                         



【app.js】

import PropTypes from 'prop-types'
import {increment, decrement} from './actions'                      import * as actions from './actions'

export default class App extends Component {

    static propTypes = {
        count: PropTypes.number.isRequired,
        increment: PropTypes.func.isRequired,
        decrement: PropTypes.func.isRequired
    }

    increment = () => {
        const number = this.select.value * 1
        this.props.store.dispatch(actions.increment(number))        // this.props.store.dispatch({type:INCREMENT, data:number})
    }
    decrement = () => {
        const number = this.select.value * 1
        this.props.store.dispatch(actions.decrement(number))        // this.props.store.dispatch({type:DECREMENT, data:number})
    }
this.props.store.getState()



【reducers.js】

import {INCREMENT, DECREMENT} from './action-type'

export function counter(state=0, action) {
    console.log('counter()', state, action)
    switch (action.type) {
        case INCREMENT:
            return state + action.data
        case DECREMENT:
            return state - action.data
        default:
            return state
    }
}



【store.js】

import {createStore} from 'redux'
import {counter} from './redux/reducers'

const store = createStore(counter) //調用reducer(counter函數)得到初始值0

export default store



【action.js】

import {INCREMENT, DECREMENT} from './action-type'

//包含所有action creator
export const incrementCreator = (number) => ({type:INCREMENT, data: number})
export const decrementCreator = (number) => ({type:DECREMENT, data: number})



【action-type.js】

export const INCREMENT = 'INCREMENT'
export const DECREMENT = 'DECREMENT'
